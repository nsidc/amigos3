We are here
We are here
We are here
We are here
Filename: onvif/client.py

Line #    Mem usage    Increment   Line Contents
================================================
   364  100.207 MiB  100.207 MiB       @profile
   365                                 def create_onvif_service(self, name, from_template=True, portType=None):
   366                                     '''Create ONVIF service client'''
   367                             
   368  100.207 MiB    0.000 MiB           name = name.lower()
   369  100.207 MiB    0.000 MiB           xaddr, wsdl_file = self.get_definition(name)
   370                             
   371  100.207 MiB    0.000 MiB           with self.services_lock:
   372  100.207 MiB    0.000 MiB               svt = self.services_template.get(name)
   373                                         # Has a template, clone from it. Faster.
   374  100.207 MiB    0.020 MiB               if svt and from_template and self.use_services_template.get(name):
   375                                             service = ONVIFService.clone(svt, xaddr, self.user,
   376                                                                          self.passwd, wsdl_file,
   377                                                                          self.cache_location,
   378                                                                          self.cache_duration,
   379                                                                          self.encrypt,
   380                                                                          self.daemon,
   381                                                                          no_cache=self.no_cache, portType=portType, dt_diff=self.dt_diff)
   382                                         # No template, create new service from wsdl document.
   383                                         # A little time-comsuming
   384                             
   385                                         else:
   386  100.207 MiB    0.000 MiB                   service = ONVIFService(xaddr, self.user, self.passwd,
   387  100.207 MiB    0.000 MiB                                          wsdl_file, self.cache_location,
   388  100.207 MiB    0.000 MiB                                          self.cache_duration, self.encrypt,
   389  122.457 MiB   29.160 MiB                                          self.daemon, no_cache=self.no_cache, portType=portType, dt_diff=self.dt_diff)
   390  122.457 MiB    0.000 MiB               self.services[name] = service
   391  122.457 MiB    0.000 MiB               print('We are here')
   392  122.457 MiB    0.000 MiB               setattr(self, name, service)
   393  122.457 MiB    0.000 MiB               if not self.services_template.get(name):
   394  122.457 MiB    0.000 MiB                   self.services_template[name] = service
   395                             
   396  122.457 MiB    0.000 MiB           return service


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    19  123.855 MiB  123.855 MiB   @profile
    20                             def perform_move(ptz, request, timeout):
    21                                 # Start continuous move runs through all sequences
    22  123.855 MiB    0.000 MiB       ptz.ContinuousMove(request)
    23                                 # Wait a certain time to get to certain position
    24  123.855 MiB    0.000 MiB       sleep(timeout)
    25                                 # Stop continuous move after the time period runs out or the camera can no longer move in that direction
    26  123.855 MiB    0.000 MiB       ptz.Stop({'ProfileToken': request.ProfileToken})


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    29  123.855 MiB  123.855 MiB   @profile
    30                             def move_up(ptz, request, timeout):
    31                                 # print ('move up...')
    32  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._x = 0
    33  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._y = YMAX
    34  123.855 MiB  123.855 MiB       perform_move(ptz, request, timeout)


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    37  123.855 MiB  123.855 MiB   @profile
    38                             def move_down(ptz, request, timeout):
    39                                 # print ('move down...')
    40  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._x = 0
    41  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._y = YMIN
    42  123.855 MiB  123.855 MiB       perform_move(ptz, request, timeout)


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    45  123.855 MiB  123.855 MiB   @profile
    46                             def move_right(ptz, request, timeout):
    47                                 # print ('move right...')
    48  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._x = XMAX
    49  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._y = 0
    50  123.855 MiB  123.855 MiB       perform_move(ptz, request, timeout)


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    53  123.855 MiB  123.855 MiB   @profile
    54                             def move_left(ptz, request, timeout):
    55                                 # print ('move left...')
    56  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._x = XMIN
    57  123.855 MiB    0.000 MiB       request.Velocity.PanTilt._y = 0
    58  123.855 MiB  123.855 MiB       perform_move(ptz, request, timeout)


Filename: cameraIntegration.py

Line #    Mem usage    Increment   Line Contents
================================================
    61   33.340 MiB   33.340 MiB   @profile
    62                             def continuous_move():
    63                                 # import pdb
    64                                 # pdb.set_trace()
    65                                 # IP Address, port, username, password
    66   33.340 MiB    0.000 MiB       mycam = ONVIFCamera('192.168.1.108', 80, 'admin',
    67   72.059 MiB   72.059 MiB                           '10iLtxyh', '/home/coovi/Dropbox/Projects/Jane/Amigos/III/amigos/amigos/onvif/wsdl', no_cache=True)
    68                                 # Create media service object
    69  100.207 MiB  100.207 MiB       media = mycam.create_media_service()
    70                                 # Create ptz service object
    71  122.457 MiB  122.457 MiB       ptz = mycam.create_ptz_service()
    72                                 #print ptz
    73                                 # Get target profile
    74  123.855 MiB    1.398 MiB       media_profile = media.GetProfiles()[0]
    75                             
    76                                 # Get PTZ configuration options for getting continuous move range
    77  123.855 MiB    0.000 MiB       request = ptz.create_type('GetConfigurationOptions')
    78  123.855 MiB    0.000 MiB       request.ConfigurationToken = media_profile.PTZConfiguration._token
    79  123.855 MiB    0.000 MiB       ptz_configuration_options = ptz.GetConfigurationOptions(request)
    80                                 # print('above line 70')
    81  123.855 MiB    0.000 MiB       request = ptz.create_type('ContinuousMove')
    82  123.855 MiB    0.000 MiB       request.ProfileToken = media_profile._token
    83                             
    84  123.855 MiB    0.000 MiB       ptz.Stop({'ProfileToken': media_profile._token})
    85                             
    86                                 # NOTE: X and Y are velocity vector; get range of pan and tilt
    87                                 global XMAX, XMIN, YMAX, YMIN
    88  123.855 MiB    0.000 MiB       XMAX = ptz_configuration_options.Spaces.ContinuousPanTiltVelocitySpace[0].XRange.Max
    89  123.855 MiB    0.000 MiB       XMIN = ptz_configuration_options.Spaces.ContinuousPanTiltVelocitySpace[0].XRange.Min
    90  123.855 MiB    0.000 MiB       YMAX = ptz_configuration_options.Spaces.ContinuousPanTiltVelocitySpace[0].YRange.Max
    91  123.855 MiB    0.000 MiB       YMIN = ptz_configuration_options.Spaces.ContinuousPanTiltVelocitySpace[0].YRange.Min
    92                             
    93                                 # move down initialize as the first starting movement
    94  123.855 MiB  123.855 MiB       move_down(ptz, request, 5)
    95  123.855 MiB    0.000 MiB       sleep(1)  # after moving the camera waits 1 second
    96                                 # photo() #taking a photo at the location
    97                             
    98                                 # move right till in next initial position (should be facing tower)
    99  123.855 MiB  123.855 MiB       move_right(ptz, request, 5)
   100                             
   101                                 # move up 45 degrees
   102  123.855 MiB  123.855 MiB       move_up(ptz, request, .5)
   103  123.855 MiB    0.000 MiB       sleep(2)
   104                                 # photo()
   105                             
   106                                 # move up
   107  123.855 MiB  123.855 MiB       move_up(ptz, request, .6)
   108  123.855 MiB    0.000 MiB       sleep(2)
   109                                 # photo()
   110                             
   111                                 # move left
   112  123.855 MiB  123.855 MiB       move_left(ptz, request, .80)
   113  123.855 MiB    0.000 MiB       sleep(2)
   114                                 # photo()
   115                             
   116                                 # move left
   117  123.855 MiB  123.855 MiB       move_left(ptz, request, .70)
   118  123.855 MiB    0.000 MiB       sleep(2)
   119                                 # photo()
   120                             
   121                                 # move left
   122  123.855 MiB  123.855 MiB       move_left(ptz, request, .75)
   123  123.855 MiB    0.000 MiB       sleep(2)


